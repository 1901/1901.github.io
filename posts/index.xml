<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 1901 防糊涂笔记</title>
    <link>https://1901.github.io/posts/</link>
    <description>Recent content in Posts on 1901 防糊涂笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 10 Sep 2021 20:07:01 +0800</lastBuildDate><atom:link href="https://1901.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Hugo 搭建博客</title>
      <link>https://1901.github.io/posts/%E4%BD%BF%E7%94%A8-Hugo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Fri, 10 Sep 2021 20:07:01 +0800</pubDate>
      
      <guid>https://1901.github.io/posts/%E4%BD%BF%E7%94%A8-Hugo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>尝试使用 Hugo 来搭建静态博客。
安装 #  我是用的 macOS，如果是其他系统请直接参考 官方文档。
brew install hugo 创建博客 #  hugo new site myblog 安装主题 #  可以在这里找到你喜欢的主题。(本站采用的就是 hugo-book 主题)
  https://themes.gohugo.io  cd themes git clone --depth 1 https://github.com/alex-shpak/hugo-book book </description>
    </item>
    
    <item>
      <title>iOS 中安装 SSH 及常用终端工具</title>
      <link>https://1901.github.io/posts/ios%E4%B8%AD%E5%AE%89%E8%A3%85SSH%E5%8F%8A%E5%B8%B8%E7%94%A8%E7%BB%88%E7%AB%AF%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 14 Nov 2012 14:56:31 +0800</pubDate>
      
      <guid>https://1901.github.io/posts/ios%E4%B8%AD%E5%AE%89%E8%A3%85SSH%E5%8F%8A%E5%B8%B8%E7%94%A8%E7%BB%88%E7%AB%AF%E5%B7%A5%E5%85%B7/</guid>
      <description>  使用 Cydia 搜索并安装 OpenSSH。
  使用 Cydia 搜索并安装 MobileTerminal Package。
  使用 Cydia 安装 apt 0.7 strict, apt 0.7 strict(lib), apt 0.7 HTTPS Method, apt 0.7(apt-key)。
  使用 MobileTerminal 登录。
 root 默认密码：alpine mobile 默认密码：alpine    启动 MobileTerminal 安装常用工具 #  su root # 然后输入root密码 &amp;gt; apt-get install inetutils # ping 命令需要 &amp;gt; apt-get install ifconfig &amp;gt; apt-get install netstat &amp;gt; apt-get install more &amp;gt; apt-get install vim </description>
    </item>
    
    <item>
      <title>Sqlite 基础知识</title>
      <link>https://1901.github.io/posts/sqlite%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sun, 14 Oct 2012 14:49:48 +0800</pubDate>
      
      <guid>https://1901.github.io/posts/sqlite%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>sqlite官方网站：www.sqlite.org
启动 sqlite (打开终端，输入命令) #  打开当前目录下的test.db数据库，如果没有这个文件刚创建一个数据库。
$ sqlite3 test.db  查看sqlite帮助内容  sqlite&amp;gt; .help  列出当前数据库中的所有表名  sqlite&amp;gt; .tables  执行一个sql文件  sqlite&amp;gt; .read f.sql  查看建表语句，指定参数则查看指定表的建表语句，不指定参数时查看所有表的建表语句  sqlite&amp;gt; .schema sqlite&amp;gt; .schema table 建表示例 #  CREATE TABLE kxtest( id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(100) NOT NULL, sex INTEGER DEFAULT 0, date DATE ); 其他 #  使用自增长字段时，引擎会自动产生一个sqlite_sequence表，用于记录每个表的自增长字段的已使用的最大值。
 用户可以使用下面的查询语句查询各个表自动增长的记录。  sqlite&amp;gt; select * from sqlite_sequence;  用户可以使用下面的语句清空自动增长记录。  sqlite&amp;gt; delete from sqlite_sequence; 说明：SQLite中没有 truncate 命令清空表，如果需要清空表，可以先删除表中的记录，再从 sqlite_sequence 中删除相应的记录</description>
    </item>
    
    <item>
      <title>Hello GitHub</title>
      <link>https://1901.github.io/posts/hello-world/</link>
      <pubDate>Fri, 12 Oct 2012 14:00:00 +0800</pubDate>
      
      <guid>https://1901.github.io/posts/hello-world/</guid>
      <description> Hello GitHub  </description>
    </item>
    
    <item>
      <title>Archives</title>
      <link>https://1901.github.io/posts/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://1901.github.io/posts/archives/</guid>
      <description>This page contains an archive of all posts.</description>
    </item>
    
  </channel>
</rss>
